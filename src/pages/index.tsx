import { GameField } from '@/components/GameField'
import { GameOver } from '@/components/GameOver'
import { Settings } from '@/components/Settings'
import { Stats } from '@/components/Stats'
import { services } from '@/services'
import Head from 'next/head'
import { useEffect, useState } from 'react'

export default function Home() {
  const [gameField, setGameField] = useState<any>([])
  const [gameProperties, setGameProperties] = useState({
    userScore: 0,
    attempts: 0,
    height: 0,
    width: 0,
    gameState: 0,
    clicks: 0
  })

  const setField = async() => {
    try{
      const result = await services.filed.createField(gameProperties)
      if(result){
        setGameField(result)
        setGameProperties({...gameProperties,
          userScore: 0,
          attempts: 0,
          gameState: 0,
          clicks: 0
        })
      }
    }
    catch(error: any){
      console.log("ERROR, mine btw))", error)
    }
  }

  const sweepCell = (row: number, cell: number) => {
    if(gameField[row][cell].clicked){return}
    setGameProperties({...gameProperties, clicks: gameProperties.clicks + 1})

    !gameField[row][cell].clicked && (gameField[row][cell].clicked = true)
    gameField[row][cell].isBomb && setGameProperties({...gameProperties, gameState: 2})
  }

  useEffect(()=>{
    console.log("GAME FIELD!", gameField)
  }, [gameField])

  return(
    <>
      <Head>
        <title>MineSweeper</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className='container'>
        MineSweeper
        <Settings
        gameProperties={gameProperties}
        setGameProperties={setGameProperties}
        setField={setField}/>
        <GameField
        gameField={gameField}
        sweepCell={sweepCell}
        gameProperties={gameProperties}/>

        <Stats
        gameProperties={gameProperties}/>

        {gameProperties.gameState == 2
        ? <GameOver 
        gameProperties={gameProperties}
        setField={setField}/>
        :""}
      </div>
    </>
  )
}
